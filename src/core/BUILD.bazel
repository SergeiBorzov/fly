load("@rules_cc//cc:defs.bzl", "cc_library")

cc_library(
    name = "types",
    hdrs = [
        "types.h",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "platform",
    hdrs = [
        "platform.h",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "assert",
    hdrs = [
        "assert.h",
    ],
    srcs = [
        "assert.cpp",
    ],
    deps = [
        ":types",
        ":platform",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "memory",
    hdrs = [
        "memory.h",
        "arena.h",
    ],
    srcs = [
        "arena.cpp",
        "memory.cpp",
    ] + select({
        "@platforms//os:osx": [ "memory_osx.cpp" ],
	    "@platforms//os:windows": [ "memory_windows.cpp" ],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    deps = [
        ":assert",
        "@mimalloc//:mimalloc",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "thread_context",
    hdrs = [
        "thread_context.h",
    ],
    srcs = [
        "thread_context.cpp",
    ],
    deps = [
        ":memory",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "string8",
    hdrs = [
        "string8.h",
    ],
    srcs = [
        "string8.cpp",
    ],
    deps = [
        ":memory",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "filesystem",
    hdrs = [
        "filesystem.h",
    ],
    srcs = [
        "filesystem.cpp",
    ],
    deps = [
        ":string8",
        ":thread_context",
    ],
    linkopts = select({
	    "@platforms//os:windows": [
            "-DEFAULTLIB:PathCch.lib",
        ],
    }),
    visibility = ["//visibility:public"],
)

cc_library(
    name = "log",
    hdrs = [
        "log.h",
    ],
    srcs = [
        "log.cpp",
    ],
    deps = [
        ":assert",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "clock",
    hdrs = [
        "clock.h",
    ],
    srcs = [
        "clock.cpp",
    ],
    deps = [
        ":types",
        ":platform",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "core",
    deps = [
        ":filesystem",
        ":log",
        ":clock",
        ":thread_context",
    ],
    visibility = ["//visibility:public"],
)
