load("@rules_cc//cc:defs.bzl", "cc_library", "objc_library")
load("@fly//scripts/bazel/rules:generate_wayland_protocol.bzl", "generate_wayland_protocol")

generate_wayland_protocol(
    name = "wayland_protocol_h",
    protocol_file = "deps/wayland/wayland.xml",
    output_file = "wayland-client-protocol.h",
    option = "client-header",
)
generate_wayland_protocol(
    name = "wayland_protocol_c",
    protocol_file = "deps/wayland/wayland.xml",
    output_file = "wayland-client-protocol-code.h",
    option = "private-code",
)

generate_wayland_protocol(
    name = "viewporter_protocol_h",
    protocol_file = "deps/wayland/viewporter.xml",
    output_file = "viewporter-client-protocol.h",
    option = "client-header",
)
generate_wayland_protocol(
    name = "viewporter_protocol_c",
    protocol_file = "deps/wayland/viewporter.xml",
    output_file = "viewporter-client-protocol-code.h",
    option = "private-code",
)

generate_wayland_protocol(
    name = "xdg_shell_protocol_h",
    protocol_file = "deps/wayland/xdg-shell.xml",
    output_file = "xdg-shell-client-protocol.h",
    option = "client-header",
)
generate_wayland_protocol(
    name = "xdg_shell_protocol_c",
    protocol_file = "deps/wayland/xdg-shell.xml",
    output_file = "xdg-shell-client-protocol-code.h",
    option = "private-code",
)

generate_wayland_protocol(
    name = "idle_inhibit_unstable_v1_protocol_h",
    protocol_file = "deps/wayland/idle-inhibit-unstable-v1.xml",
    output_file = "idle-inhibit-unstable-v1-client-protocol.h",
    option = "client-header",
)
generate_wayland_protocol(
    name = "idle_inhibit_unstable_v1_protocol_c",
    protocol_file = "deps/wayland/idle-inhibit-unstable-v1.xml",
    output_file = "idle-inhibit-unstable-v1-client-protocol-code.h",
    option = "private-code",
)

generate_wayland_protocol(
    name = "pointer_constraints_unstable_v1_protocol_h",
    protocol_file = "deps/wayland/pointer-constraints-unstable-v1.xml",
    output_file = "pointer-constraints-unstable-v1-client-protocol.h",
    option = "client-header",
)
generate_wayland_protocol(
    name = "pointer_constraints_unstable_v1_protocol_c",
    protocol_file = "deps/wayland/pointer-constraints-unstable-v1.xml",
    output_file = "pointer-constraints-unstable-v1-client-protocol-code.h",
    option = "private-code",
)

generate_wayland_protocol(
    name = "relative_pointer_unstable_v1_protocol_h",
    protocol_file = "deps/wayland/relative-pointer-unstable-v1.xml",
    output_file = "relative-pointer-unstable-v1-client-protocol.h",
    option = "client-header",
)
generate_wayland_protocol(
    name = "relative_pointer_unstable_v1_protocol_c",
    protocol_file = "deps/wayland/relative-pointer-unstable-v1.xml",
    output_file = "relative-pointer-unstable-v1-client-protocol-code.h",
    option = "private-code",
)

generate_wayland_protocol(
    name = "fractional_scale_v1_protocol_h",
    protocol_file = "deps/wayland/fractional-scale-v1.xml",
    output_file = "fractional-scale-v1-client-protocol.h",
    option = "client-header",
)
generate_wayland_protocol(
    name = "fractional_scale_v1_protocol_c",
    protocol_file = "deps/wayland/fractional-scale-v1.xml",
    output_file = "fractional-scale-v1-client-protocol-code.h",
    option = "private-code",
)

generate_wayland_protocol(
    name = "xdg_activation_v1_protocol_h",
    protocol_file = "deps/wayland/xdg-activation-v1.xml",
    output_file = "xdg-activation-v1-client-protocol.h",
    option = "client-header",
)
generate_wayland_protocol(
    name = "xdg_activation_v1_protocol_c",
    protocol_file = "deps/wayland/xdg-activation-v1.xml",
    output_file = "xdg-activation-v1-client-protocol-code.h",
    option = "private-code",
)

generate_wayland_protocol(
    name = "xdg_decoration_unstable_v1_protocol_h",
    protocol_file = "deps/wayland/xdg-decoration-unstable-v1.xml",
    output_file = "xdg-decoration-unstable-v1-client-protocol.h",
    option = "client-header",
)
generate_wayland_protocol(
    name = "xdg_decoration_unstable_v1_protocol_c",
    protocol_file = "deps/wayland/xdg-decoration-unstable-v1.xml",
    output_file = "xdg-decoration-unstable-v1-client-protocol-code.h",
    option = "private-code",
)

objc_library(
    name = "glfw_objc",
    non_arc_srcs = [
        "src/cocoa_init.m",
	"src/cocoa_joystick.m",
	"src/cocoa_monitor.m",
	"src/cocoa_window.m",
	"src/nsgl_context.m",
    ],
    hdrs = [
        "include/GLFW/glfw3.h",
        "include/GLFW/glfw3native.h",
        "src/internal.h",
	"src/platform.h",
	"src/null_platform.h",
	"src/null_joystick.h",
	"src/cocoa_platform.h",
	"src/cocoa_joystick.h",
	"src/posix_thread.h",
	"src/cocoa_time.h",
    ],
    defines = [
        "_GLFW_COCOA",
    ],
    sdk_frameworks = [
        "Cocoa",
	"IOKit",
        "CoreFoundation",
	"QuartzCore",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "glfw",
    srcs = [
        "src/context.c",
        "src/egl_context.c",
        "src/init.c",
        "src/input.c",
        "src/monitor.c",
        "src/null_init.c",
        "src/null_joystick.c",
        "src/null_monitor.c",
        "src/null_window.c",
        "src/osmesa_context.c",
        "src/platform.c",
        "src/vulkan.c",
        "src/window.c",
    ] + select({
        "@platforms//os:osx": [
            "src/cocoa_time.c",
            "src/posix_thread.c",
            "src/posix_time.c",
            "src/posix_poll.c",
        ],
        "@platforms//os:windows": [
            "src/wgl_context.c",
            "src/win32_init.c",
            "src/win32_joystick.c",
            "src/win32_module.c",
            "src/win32_monitor.c",
            "src/win32_thread.c",
            "src/win32_time.c",
            "src/win32_window.c",
        ],
        "@platforms//os:linux": [
            "src/linux_joystick.c",
            "src/posix_thread.c",
            "src/posix_time.c",
            "src/posix_poll.c",
            "src/posix_module.c",
            "src/wl_init.c",
            "src/wl_monitor.c",
            "src/wl_window.c",
            "src/glx_context.c",
            "src/xkb_unicode.c",
        ],
    }),
    hdrs = [
        "src/internal.h",
        "src/mappings.h",
        "src/null_joystick.h",
        "src/null_platform.h",
        "src/platform.h",
        "include/GLFW/glfw3.h",
        "include/GLFW/glfw3native.h"
    ] + select({
        "@platforms//os:osx": [
            "src/cocoa_joystick.h",
            "src/cocoa_platform.h",
            "src/cocoa_time.h",
            "src/posix_thread.h",
            "src/posix_time.h",
            "src/posix_poll.h",
        ],
        "@platforms//os:windows": [
            "src/win32_joystick.h",
            "src/win32_thread.h",
            "src/win32_platform.h",
            "src/win32_time.h",
        ],
        "@platforms//os:linux": [
            "src/linux_joystick.h",
            "src/posix_thread.h",
            "src/posix_time.h",
            "src/posix_poll.h",
            "src/wl_platform.h",
            "src/xkb_unicode.h",
            ":wayland-client-protocol.h",
            ":wayland-client-protocol-code.h",
            ":viewporter-client-protocol.h",
            ":viewporter-client-protocol-code.h",
            ":xdg-shell-client-protocol.h",
            ":xdg-shell-client-protocol-code.h",
            ":idle-inhibit-unstable-v1-client-protocol.h",
            ":idle-inhibit-unstable-v1-client-protocol-code.h",
            ":pointer-constraints-unstable-v1-client-protocol.h",
            ":pointer-constraints-unstable-v1-client-protocol-code.h",
            ":relative-pointer-unstable-v1-client-protocol.h",
            ":relative-pointer-unstable-v1-client-protocol-code.h",
            ":fractional-scale-v1-client-protocol.h",
            ":fractional-scale-v1-client-protocol-code.h",
            ":xdg-activation-v1-client-protocol.h",
            ":xdg-activation-v1-client-protocol-code.h",
            ":xdg-decoration-unstable-v1-client-protocol.h",
            ":xdg-decoration-unstable-v1-client-protocol-code.h",
        ],
    }),
    includes = [
        "include",
    ],
    defines = [] + select({
        "@platforms//os:osx": ["_GLFW_COCOA"],
        "@platforms//os:windows": ["_GLFW_WIN32"],
        "@platforms//os:linux": ["_GLFW_WAYLAND"],
        "//conditions:default": [],
    }),
    deps = select({
        "@platforms//os:osx": [":glfw_objc"],
        "//conditions:default": [],
    }),
    visibility = ["//visibility:public"],
    linkopts = [] + select({
        "@platforms//os:windows": [
            "-DEFAULTLIB:user32.lib",
            "-DEFAULTLIB:gdi32.lib",
            "-DEFAULTLIB:shell32.lib"
        ],
        "//conditions:default": [],
    })
)

