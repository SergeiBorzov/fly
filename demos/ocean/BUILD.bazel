load("@rules_cc//cc:defs.bzl", "cc_library", "cc_binary")
load("@fly//scripts/bazel/rules:glslang.bzl", "glsl_shader")
load("@fly//scripts/bazel/rules:common.bzl", "copy_vulkan_layers", "copy_molten_vk")
load("@fly//scripts/bazel/rules:copy_files_to_directory.bzl", "copy_files_to_directory")

copy_vulkan_layers()
copy_molten_vk()

copy_files_to_directory(
    name = "copy_scene_data",
    srcs = [
        "@ambientcg//:DaySkyHDRI051B_4K-TONEMAPPED.jpg",
    ],
    output_directory = ".",
)

glsl_shader(
    name = "transpose.comp.spv",
    src = "transpose.comp",
    deps = [
        "//demos/common:glsl_bindless",
    ],
)

glsl_shader(
    name = "ifft.comp.spv",
    src = "ifft.comp",
    deps = [
        "//demos/common:glsl_bindless",
    ],
)

glsl_shader(
    name = "jonswap.comp.spv",
    src = "jonswap.comp",
    deps = [
        "//demos/common:glsl_bindless",
    ],
)

glsl_shader(
    name = "copy.comp.spv",
    src = "copy.comp",
    deps = [
        "//demos/common:glsl_bindless",
    ],
)

glsl_shader(
    name = "ocean.vert.spv",
    src = "ocean.vert",
    deps = [
        "//demos/common:glsl_bindless",
    ],
)

glsl_shader(
    name = "ocean.frag.spv",
    src = "ocean.frag",
    deps = [
        "//demos/common:glsl_bindless",
    ],
)

glsl_shader(
    name = "sky.vert.spv",
    src = "sky.vert",
    deps = [
        "//demos/common:glsl_bindless",
    ],
)

glsl_shader(
    name = "sky.frag.spv",
    src = "sky.frag",
    deps = [
        "//demos/common:glsl_bindless",
    ],
)

glsl_shader(
    name = "foam.frag.spv",
    src = "foam.frag",
    deps = [
        "//demos/common:glsl_bindless",
    ],
)

cc_binary(
    name = "app",
    srcs = [
        "main.cpp",
    ],
    deps = [
        "@imgui//:imgui",
        "//src/rhi:context",
        "//src/math:math",
        "//src/utils:utils",
        "//demos/common:simple_camera_fps",
    ],
    data = [
        ":sky.vert.spv",
        ":sky.frag.spv",
        ":foam.frag.spv",
        ":ocean.vert.spv",
        ":ocean.frag.spv",
        ":copy.comp.spv",
        ":transpose.comp.spv",
        ":ifft.comp.spv",
        ":jonswap.comp.spv",
    ] + select({
        "@fly//scripts/bazel/build_type:release": [
        ],
        "//conditions:default": [
            ":copy_vulkan_validation_layer",
            ":copy_scene_data",
        ],
    }),
)

