#version 460
#extension GL_GOOGLE_include_directive : require
#include "bindless.glsl"

layout(local_size_x = 256) in;

layout(push_constant) uniform PushConstants
{
    uint dataBufferIndex;
    uint diffDisplacementMapIndex;
    uint heightMapIndex;
}
gPushConstants;

FLY_REGISTER_STORAGE_BUFFER(readonly, Data, {
    vec2 value;
    vec2 displacement;
    vec2 dx;
    vec2 dy;
    vec2 dxDisplacement;
    vec2 dyDisplacement;
})

FLY_REGISTER_STORAGE_TEXTURE_BUFFER(writeonly, RGBA16FTextures, image2D,
                                    rgba16f)

void main()
{
    uint c = gl_LocalInvocationID.x;
    uint r = gl_WorkGroupID.x;
    uint base = r * gl_WorkGroupSize.x;

    Data data = FLY_ACCESS_STORAGE_BUFFER(
        Data, gPushConstants.dataBufferIndex)[base + c];

    imageStore(FLY_ACCESS_STORAGE_TEXTURE_BUFFER(
                   RGBA16FTextures, gPushConstants.diffDisplacementMapIndex),
               ivec2(c, r),
               vec4(data.dx.x, data.dy.x, data.dxDisplacement.x,
                    data.dyDisplacement.y));
    imageStore(FLY_ACCESS_STORAGE_TEXTURE_BUFFER(RGBA16FTextures,
                                                 gPushConstants.heightMapIndex),
               ivec2(c, r),
               vec4(data.value.x, data.displacement.x, data.displacement.y,
                    data.dxDisplacement.y));
}
