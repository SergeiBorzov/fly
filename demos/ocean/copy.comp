#version 460
#extension GL_GOOGLE_include_directive : enable
#include "bindless.glsl"

layout(local_size_x = 256) in;

layout(push_constant) uniform PushConstants
{
    uint dataBufferIndex;
    uint textureIndex;
}
gPushConstants;

FLY_REGISTER_STORAGE_BUFFER(readonly, Data, {
    vec2 value;
    vec2 dx;
    vec2 dy;
})
FLY_REGISTER_STORAGE_TEXTURE_BUFFER(writeonly, StorageTextures, image2D, r16f)

void main()
{
    uint c = gl_LocalInvocationID.x;
    uint r = gl_WorkGroupID.x;
    uint base = r * gl_WorkGroupSize.x;

    Data data = FLY_ACCESS_STORAGE_BUFFER(
        Data, gPushConstants.dataBufferIndex)[base + c];

    vec3 n = normalize(vec3(-data.dx.x, 1, -data.dy.x));
    imageStore(FLY_ACCESS_STORAGE_TEXTURE_BUFFER(StorageTextures,
                                                 gPushConstants.textureIndex),
               ivec2(c, r), vec4(n, data.value.x));
}
