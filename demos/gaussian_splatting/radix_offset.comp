#version 460
#extension GL_GOOGLE_include_directive : enable
#include "bindless.glsl"

#define WORKGROUP_SIZE 4
#define INVOCATION_CHUNK_SIZE 1
#define CHUNK_SIZE WORKGROUP_SIZE* INVOCATION_CHUNK_SIZE
#define RADIX_BITS 2
#define RADIX_TABLE_SIZE 4U

layout(local_size_x = WORKGROUP_SIZE) in;

layout(push_constant) uniform PushConstants
{
    uint pass;
    uint keyCount;
    uint keyBufferIndex;
    uint countBufferIndex;
}
gPushConstants;

HLS_REGISTER_STORAGE_BUFFER(readonly, Keys, { uint key; })
HLS_REGISTER_STORAGE_BUFFER(, ChunkCounts, { uint count; })

void main()
{
    uint localInvocation = gl_LocalInvocationIndex;
    uint radix = gl_WorkGroupID.x;
    HLS_ACCESS_STORAGE_BUFFER(ChunkCounts, gPushConstants.countBufferIndex)
    [RADIX_TABLE_SIZE * radix + localInvocation].count = 5;
    return;
}
