load("@rules_cc//cc:defs.bzl", "cc_library", "cc_binary")
load("@fly//scripts/bazel/rules:glslang.bzl", "glsl_library", "glsl_shader")
load("@fly//scripts/bazel/rules:copy_files_to_directory.bzl", "copy_files_to_directory")
load("@fly//scripts/bazel/rules:common.bzl", "copy_vulkan_layers", "copy_molten_vk")

copy_vulkan_layers()
copy_molten_vk()

glsl_library(
    name = "atmosphere_common",
    hdrs = [
        "common.glsl",
    ],
    visibility = ["//visibility:public"]
)

glsl_shader(
    name = "screen_quad.vert.spv",
    src = "screen_quad.vert",
)

glsl_shader(
    name = "screen_quad.frag.spv",
    src = "screen_quad.frag",
    deps = [
        "//demos/common:glsl_bindless",
    ],
)

glsl_shader(
    name = "sample_cubemap.vert.spv",
    src = "sample_cubemap.vert",
    deps = [
        "//demos/common:glsl_bindless",
    ],
)

glsl_shader(
    name = "sample_cubemap.frag.spv",
    src = "sample_cubemap.frag",
    deps = [
        "//demos/common:glsl_bindless",
    ],
)

glsl_shader(
    name = "irradiance_map.frag.spv",
    src = "irradiance_map.frag",
    deps = [
        "//demos/common:glsl_bindless",
    ],
)

glsl_shader(
    name = "transmittance_lut.comp.spv",
    src = "transmittance_lut.comp",
    deps = [
        ":atmosphere_common",
        "//demos/common:glsl_bindless",
    ],
)

glsl_shader(
    name = "multiscattering_lut.comp.spv",
    src = "multiscattering_lut.comp",
    deps = [
        ":atmosphere_common",
        "//demos/common:glsl_bindless",
    ],
)

glsl_shader(
    name = "skyview_lut.comp.spv",
    src = "skyview_lut.comp",
    deps = [
        ":atmosphere_common",
        "//demos/common:glsl_bindless",
    ],
)

glsl_shader(
    name = "aerial_perspective_lut.comp.spv",
    src = "aerial_perspective_lut.comp",
    deps = [
        ":atmosphere_common",
        "//demos/common:glsl_bindless",
    ],
)

glsl_shader(
    name = "average_horizon_luminance.comp.spv",
    src = "average_horizon_luminance.comp",
    deps = [
        ":atmosphere_common",
        "//demos/common:glsl_bindless",
    ],
)

glsl_shader(
    name = "project_skyview_radiance.comp.spv",
    src = "project_skyview_radiance.comp",
    deps = [
        ":atmosphere_common",
        "//demos/common:glsl_bindless",
    ],
)

glsl_shader(
    name = "terrain_scene.frag.spv",
    src = "terrain_scene.frag",
    deps = [
        ":atmosphere_common",
        "//demos/common:glsl_bindless",
    ]
)

cc_binary(
    name = "app",
    srcs = [
        "main.cpp",
    ],
    deps = [
        "//src/rhi:context",
        "//src/utils:utils",
        "//demos/common:simple_camera_fps",
        "@imgui//:imgui",
    ],
    data = [
        ":screen_quad.vert.spv",
        ":screen_quad.frag.spv",
        ":sample_cubemap.vert.spv",
        ":sample_cubemap.frag.spv",
        ":irradiance_map.frag.spv",
        ":transmittance_lut.comp.spv",
        ":multiscattering_lut.comp.spv",
        ":skyview_lut.comp.spv",
        ":aerial_perspective_lut.comp.spv",
        ":project_skyview_radiance.comp.spv",
        ":average_horizon_luminance.comp.spv",
        ":terrain_scene.frag.spv",
    ] + select({
        "@fly//scripts/bazel/build_type:release": [],
        "//conditions:default": [
            ":copy_vulkan_validation_layer",
        ],
    }) + select({
        "@platforms//os:osx": [
            ":copy_molten_vk",
	],
        "//conditions:default": [],
    }),
)
    